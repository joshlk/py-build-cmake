name: macos_build
on:
  push:
    branches:    
      - main
  workflow_dispatch:
jobs:
  macos_build:
    runs-on: macos-15
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install PyEnv and Python
      run: |
        set -x
        curl -fsSL https://pyenv.run | bash
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init - bash)"
        pyenv install 3.12.5
        pyenv global 3.12.5
        pip install --upgrade pip build
    - name: Get System Details
      run: |
        set -x
        # Activate pyenv
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init - bash)"
        pyenv global 3.12.5

        # Print info
        cat /System/Library/CoreServices/SystemVersion.plist
        sw_vers
        python --version
        pip --version
        python -m build --version

        # Python info
        echo "Python info:"
        python -c "import sysconfig
        print(sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET'))
        import distlib.util
        print(distlib.util.get_platform())
        import packaging.tags
        print(list(packaging.tags.mac_platforms()))
        import platform
        print(platform.mac_ver())
        import pip._internal.utils.compatibility_tags
        print(pip._internal.utils.compatibility_tags.get_supported())"
    - name: Build project and try to install
      run: |
        set -x
        # Activate pyenv
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init - bash)"
        pyenv global 3.12.5

        # Build and install project
        cd examples/nanobind-project
        python -m build
        echo "Build name"
        echo $(ls -l dist/*.whl)
        python -m pip install dist/*.whl
